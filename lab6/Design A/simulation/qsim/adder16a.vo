// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Standard Edition"

// DATE "10/11/2016 18:39:28"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module adder16a (
	cout,
	add,
	a,
	b,
	over,
	s);
output 	cout;
input 	add;
input 	[15:0] a;
input 	[15:0] b;
output 	over;
output 	[15:0] s;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \cout~output_o ;
wire \over~output_o ;
wire \s[15]~output_o ;
wire \s[14]~output_o ;
wire \s[13]~output_o ;
wire \s[12]~output_o ;
wire \s[11]~output_o ;
wire \s[10]~output_o ;
wire \s[9]~output_o ;
wire \s[8]~output_o ;
wire \s[7]~output_o ;
wire \s[6]~output_o ;
wire \s[5]~output_o ;
wire \s[4]~output_o ;
wire \s[3]~output_o ;
wire \s[2]~output_o ;
wire \s[1]~output_o ;
wire \s[0]~output_o ;
wire \add~input_o ;
wire \a[15]~input_o ;
wire \b[15]~input_o ;
wire \a[14]~input_o ;
wire \b[14]~input_o ;
wire \a[13]~input_o ;
wire \b[13]~input_o ;
wire \a[12]~input_o ;
wire \b[12]~input_o ;
wire \a[11]~input_o ;
wire \b[11]~input_o ;
wire \a[10]~input_o ;
wire \b[10]~input_o ;
wire \a[9]~input_o ;
wire \b[9]~input_o ;
wire \a[8]~input_o ;
wire \b[8]~input_o ;
wire \a[7]~input_o ;
wire \b[7]~input_o ;
wire \a[6]~input_o ;
wire \b[6]~input_o ;
wire \a[5]~input_o ;
wire \b[5]~input_o ;
wire \a[4]~input_o ;
wire \b[4]~input_o ;
wire \a[3]~input_o ;
wire \b[3]~input_o ;
wire \a[2]~input_o ;
wire \b[2]~input_o ;
wire \a[1]~input_o ;
wire \b[1]~input_o ;
wire \a[0]~input_o ;
wire \b[0]~input_o ;
wire \inst|auto_generated|add_sub_cella[0]~2_cout ;
wire \inst|auto_generated|add_sub_cella[0]~COUT ;
wire \inst|auto_generated|add_sub_cella[1]~COUT ;
wire \inst|auto_generated|add_sub_cella[2]~COUT ;
wire \inst|auto_generated|add_sub_cella[3]~COUT ;
wire \inst|auto_generated|add_sub_cella[4]~COUT ;
wire \inst|auto_generated|add_sub_cella[5]~COUT ;
wire \inst|auto_generated|add_sub_cella[6]~COUT ;
wire \inst|auto_generated|add_sub_cella[7]~COUT ;
wire \inst|auto_generated|add_sub_cella[8]~COUT ;
wire \inst|auto_generated|add_sub_cella[9]~COUT ;
wire \inst|auto_generated|add_sub_cella[10]~COUT ;
wire \inst|auto_generated|add_sub_cella[11]~COUT ;
wire \inst|auto_generated|add_sub_cella[12]~COUT ;
wire \inst|auto_generated|add_sub_cella[13]~COUT ;
wire \inst|auto_generated|add_sub_cella[14]~COUT ;
wire \inst|auto_generated|cout ;
wire \inst|auto_generated|cout~1_sumout ;
wire [15:0] \inst|auto_generated|result ;
wire [0:0] \inst|auto_generated|overflow_wire ;


cyclonev_io_obuf \cout~output (
	.i(\inst|auto_generated|cout~1_sumout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
defparam \cout~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \over~output (
	.i(\inst|auto_generated|overflow_wire [0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\over~output_o ),
	.obar());
// synopsys translate_off
defparam \over~output .bus_hold = "false";
defparam \over~output .open_drain_output = "false";
defparam \over~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[15]~output (
	.i(\inst|auto_generated|result [15]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[15]~output .bus_hold = "false";
defparam \s[15]~output .open_drain_output = "false";
defparam \s[15]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[14]~output (
	.i(\inst|auto_generated|result [14]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[14]~output .bus_hold = "false";
defparam \s[14]~output .open_drain_output = "false";
defparam \s[14]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[13]~output (
	.i(\inst|auto_generated|result [13]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[13]~output .bus_hold = "false";
defparam \s[13]~output .open_drain_output = "false";
defparam \s[13]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[12]~output (
	.i(\inst|auto_generated|result [12]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[12]~output .bus_hold = "false";
defparam \s[12]~output .open_drain_output = "false";
defparam \s[12]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[11]~output (
	.i(\inst|auto_generated|result [11]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[11]~output .bus_hold = "false";
defparam \s[11]~output .open_drain_output = "false";
defparam \s[11]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[10]~output (
	.i(\inst|auto_generated|result [10]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[10]~output .bus_hold = "false";
defparam \s[10]~output .open_drain_output = "false";
defparam \s[10]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[9]~output (
	.i(\inst|auto_generated|result [9]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[9]~output .bus_hold = "false";
defparam \s[9]~output .open_drain_output = "false";
defparam \s[9]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[8]~output (
	.i(\inst|auto_generated|result [8]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[8]~output .bus_hold = "false";
defparam \s[8]~output .open_drain_output = "false";
defparam \s[8]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[7]~output (
	.i(\inst|auto_generated|result [7]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[7]~output .bus_hold = "false";
defparam \s[7]~output .open_drain_output = "false";
defparam \s[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[6]~output (
	.i(\inst|auto_generated|result [6]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[6]~output .bus_hold = "false";
defparam \s[6]~output .open_drain_output = "false";
defparam \s[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[5]~output (
	.i(\inst|auto_generated|result [5]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[5]~output .bus_hold = "false";
defparam \s[5]~output .open_drain_output = "false";
defparam \s[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[4]~output (
	.i(\inst|auto_generated|result [4]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[4]~output .bus_hold = "false";
defparam \s[4]~output .open_drain_output = "false";
defparam \s[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[3]~output (
	.i(\inst|auto_generated|result [3]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
defparam \s[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[2]~output (
	.i(\inst|auto_generated|result [2]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
defparam \s[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[1]~output (
	.i(\inst|auto_generated|result [1]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
defparam \s[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[0]~output (
	.i(\inst|auto_generated|result [0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
defparam \s[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \add~input (
	.i(add),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\add~input_o ));
// synopsys translate_off
defparam \add~input .bus_hold = "false";
defparam \add~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[15]~input (
	.i(a[15]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[15]~input_o ));
// synopsys translate_off
defparam \a[15]~input .bus_hold = "false";
defparam \a[15]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[15]~input (
	.i(b[15]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[15]~input_o ));
// synopsys translate_off
defparam \b[15]~input .bus_hold = "false";
defparam \b[15]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[14]~input (
	.i(a[14]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[14]~input_o ));
// synopsys translate_off
defparam \a[14]~input .bus_hold = "false";
defparam \a[14]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[14]~input (
	.i(b[14]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[14]~input_o ));
// synopsys translate_off
defparam \b[14]~input .bus_hold = "false";
defparam \b[14]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[13]~input (
	.i(a[13]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[13]~input_o ));
// synopsys translate_off
defparam \a[13]~input .bus_hold = "false";
defparam \a[13]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[13]~input (
	.i(b[13]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[13]~input_o ));
// synopsys translate_off
defparam \b[13]~input .bus_hold = "false";
defparam \b[13]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[12]~input (
	.i(a[12]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[12]~input_o ));
// synopsys translate_off
defparam \a[12]~input .bus_hold = "false";
defparam \a[12]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[12]~input (
	.i(b[12]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[12]~input_o ));
// synopsys translate_off
defparam \b[12]~input .bus_hold = "false";
defparam \b[12]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[11]~input (
	.i(a[11]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[11]~input_o ));
// synopsys translate_off
defparam \a[11]~input .bus_hold = "false";
defparam \a[11]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[11]~input (
	.i(b[11]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[11]~input_o ));
// synopsys translate_off
defparam \b[11]~input .bus_hold = "false";
defparam \b[11]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[10]~input (
	.i(a[10]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[10]~input_o ));
// synopsys translate_off
defparam \a[10]~input .bus_hold = "false";
defparam \a[10]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[10]~input (
	.i(b[10]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[10]~input_o ));
// synopsys translate_off
defparam \b[10]~input .bus_hold = "false";
defparam \b[10]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[9]~input (
	.i(a[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[9]~input_o ));
// synopsys translate_off
defparam \a[9]~input .bus_hold = "false";
defparam \a[9]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[9]~input (
	.i(b[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[9]~input_o ));
// synopsys translate_off
defparam \b[9]~input .bus_hold = "false";
defparam \b[9]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[8]~input (
	.i(a[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[8]~input_o ));
// synopsys translate_off
defparam \a[8]~input .bus_hold = "false";
defparam \a[8]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[8]~input (
	.i(b[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[8]~input_o ));
// synopsys translate_off
defparam \b[8]~input .bus_hold = "false";
defparam \b[8]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[7]~input (
	.i(a[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[7]~input_o ));
// synopsys translate_off
defparam \a[7]~input .bus_hold = "false";
defparam \a[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[7]~input (
	.i(b[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[7]~input_o ));
// synopsys translate_off
defparam \b[7]~input .bus_hold = "false";
defparam \b[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[6]~input (
	.i(a[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[6]~input_o ));
// synopsys translate_off
defparam \a[6]~input .bus_hold = "false";
defparam \a[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[6]~input (
	.i(b[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[6]~input_o ));
// synopsys translate_off
defparam \b[6]~input .bus_hold = "false";
defparam \b[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[5]~input (
	.i(a[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[5]~input_o ));
// synopsys translate_off
defparam \a[5]~input .bus_hold = "false";
defparam \a[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[5]~input (
	.i(b[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[5]~input_o ));
// synopsys translate_off
defparam \b[5]~input .bus_hold = "false";
defparam \b[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[4]~input (
	.i(a[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[4]~input_o ));
// synopsys translate_off
defparam \a[4]~input .bus_hold = "false";
defparam \a[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[4]~input (
	.i(b[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[4]~input_o ));
// synopsys translate_off
defparam \b[4]~input .bus_hold = "false";
defparam \b[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[3]~input (
	.i(a[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[3]~input_o ));
// synopsys translate_off
defparam \a[3]~input .bus_hold = "false";
defparam \a[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[3]~input (
	.i(b[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[3]~input_o ));
// synopsys translate_off
defparam \b[3]~input .bus_hold = "false";
defparam \b[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[2]~input (
	.i(a[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[2]~input_o ));
// synopsys translate_off
defparam \a[2]~input .bus_hold = "false";
defparam \a[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[2]~input (
	.i(b[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[2]~input_o ));
// synopsys translate_off
defparam \b[2]~input .bus_hold = "false";
defparam \b[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[0]~2 (
// Equation(s):
// \inst|auto_generated|add_sub_cella[0]~2_cout  = CARRY(( VCC ) + ( !\add~input_o  ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\add~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(),
	.cout(\inst|auto_generated|add_sub_cella[0]~2_cout ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[0]~2 .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[0]~2 .lut_mask = 64'h000000FF0000FFFF;
defparam \inst|auto_generated|add_sub_cella[0]~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[0] (
// Equation(s):
// \inst|auto_generated|result [0] = SUM(( \a[0]~input_o  ) + ( !\add~input_o  $ (\b[0]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[0]~2_cout  ))
// \inst|auto_generated|add_sub_cella[0]~COUT  = CARRY(( \a[0]~input_o  ) + ( !\add~input_o  $ (\b[0]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[0]~2_cout  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[0]~input_o ),
	.datae(gnd),
	.dataf(!\b[0]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[0]~2_cout ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [0]),
	.cout(\inst|auto_generated|add_sub_cella[0]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[0] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[0] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[0] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[1] (
// Equation(s):
// \inst|auto_generated|result [1] = SUM(( \a[1]~input_o  ) + ( !\add~input_o  $ (\b[1]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[0]~COUT  ))
// \inst|auto_generated|add_sub_cella[1]~COUT  = CARRY(( \a[1]~input_o  ) + ( !\add~input_o  $ (\b[1]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[0]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[1]~input_o ),
	.datae(gnd),
	.dataf(!\b[1]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[0]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [1]),
	.cout(\inst|auto_generated|add_sub_cella[1]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[1] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[1] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[1] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[2] (
// Equation(s):
// \inst|auto_generated|result [2] = SUM(( \a[2]~input_o  ) + ( !\add~input_o  $ (\b[2]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[1]~COUT  ))
// \inst|auto_generated|add_sub_cella[2]~COUT  = CARRY(( \a[2]~input_o  ) + ( !\add~input_o  $ (\b[2]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[1]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[2]~input_o ),
	.datae(gnd),
	.dataf(!\b[2]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[1]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [2]),
	.cout(\inst|auto_generated|add_sub_cella[2]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[2] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[2] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[2] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[3] (
// Equation(s):
// \inst|auto_generated|result [3] = SUM(( \a[3]~input_o  ) + ( !\add~input_o  $ (\b[3]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[2]~COUT  ))
// \inst|auto_generated|add_sub_cella[3]~COUT  = CARRY(( \a[3]~input_o  ) + ( !\add~input_o  $ (\b[3]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[2]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[3]~input_o ),
	.datae(gnd),
	.dataf(!\b[3]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[2]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [3]),
	.cout(\inst|auto_generated|add_sub_cella[3]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[3] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[3] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[3] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[4] (
// Equation(s):
// \inst|auto_generated|result [4] = SUM(( \a[4]~input_o  ) + ( !\add~input_o  $ (\b[4]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[3]~COUT  ))
// \inst|auto_generated|add_sub_cella[4]~COUT  = CARRY(( \a[4]~input_o  ) + ( !\add~input_o  $ (\b[4]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[3]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[4]~input_o ),
	.datae(gnd),
	.dataf(!\b[4]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[3]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [4]),
	.cout(\inst|auto_generated|add_sub_cella[4]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[4] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[4] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[4] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[5] (
// Equation(s):
// \inst|auto_generated|result [5] = SUM(( \a[5]~input_o  ) + ( !\add~input_o  $ (\b[5]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[4]~COUT  ))
// \inst|auto_generated|add_sub_cella[5]~COUT  = CARRY(( \a[5]~input_o  ) + ( !\add~input_o  $ (\b[5]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[4]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[5]~input_o ),
	.datae(gnd),
	.dataf(!\b[5]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[4]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [5]),
	.cout(\inst|auto_generated|add_sub_cella[5]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[5] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[5] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[5] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[6] (
// Equation(s):
// \inst|auto_generated|result [6] = SUM(( \a[6]~input_o  ) + ( !\add~input_o  $ (\b[6]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[5]~COUT  ))
// \inst|auto_generated|add_sub_cella[6]~COUT  = CARRY(( \a[6]~input_o  ) + ( !\add~input_o  $ (\b[6]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[5]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[6]~input_o ),
	.datae(gnd),
	.dataf(!\b[6]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[5]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [6]),
	.cout(\inst|auto_generated|add_sub_cella[6]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[6] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[6] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[6] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[7] (
// Equation(s):
// \inst|auto_generated|result [7] = SUM(( \a[7]~input_o  ) + ( !\add~input_o  $ (\b[7]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[6]~COUT  ))
// \inst|auto_generated|add_sub_cella[7]~COUT  = CARRY(( \a[7]~input_o  ) + ( !\add~input_o  $ (\b[7]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[6]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[7]~input_o ),
	.datae(gnd),
	.dataf(!\b[7]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[6]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [7]),
	.cout(\inst|auto_generated|add_sub_cella[7]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[7] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[7] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[7] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[8] (
// Equation(s):
// \inst|auto_generated|result [8] = SUM(( \a[8]~input_o  ) + ( !\add~input_o  $ (\b[8]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[7]~COUT  ))
// \inst|auto_generated|add_sub_cella[8]~COUT  = CARRY(( \a[8]~input_o  ) + ( !\add~input_o  $ (\b[8]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[7]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[8]~input_o ),
	.datae(gnd),
	.dataf(!\b[8]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[7]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [8]),
	.cout(\inst|auto_generated|add_sub_cella[8]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[8] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[8] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[8] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[9] (
// Equation(s):
// \inst|auto_generated|result [9] = SUM(( \a[9]~input_o  ) + ( !\add~input_o  $ (\b[9]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[8]~COUT  ))
// \inst|auto_generated|add_sub_cella[9]~COUT  = CARRY(( \a[9]~input_o  ) + ( !\add~input_o  $ (\b[9]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[8]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[9]~input_o ),
	.datae(gnd),
	.dataf(!\b[9]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[8]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [9]),
	.cout(\inst|auto_generated|add_sub_cella[9]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[9] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[9] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[9] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[10] (
// Equation(s):
// \inst|auto_generated|result [10] = SUM(( \a[10]~input_o  ) + ( !\add~input_o  $ (\b[10]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[9]~COUT  ))
// \inst|auto_generated|add_sub_cella[10]~COUT  = CARRY(( \a[10]~input_o  ) + ( !\add~input_o  $ (\b[10]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[9]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[10]~input_o ),
	.datae(gnd),
	.dataf(!\b[10]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[9]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [10]),
	.cout(\inst|auto_generated|add_sub_cella[10]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[10] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[10] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[10] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[11] (
// Equation(s):
// \inst|auto_generated|result [11] = SUM(( \a[11]~input_o  ) + ( !\add~input_o  $ (\b[11]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[10]~COUT  ))
// \inst|auto_generated|add_sub_cella[11]~COUT  = CARRY(( \a[11]~input_o  ) + ( !\add~input_o  $ (\b[11]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[10]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[11]~input_o ),
	.datae(gnd),
	.dataf(!\b[11]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[10]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [11]),
	.cout(\inst|auto_generated|add_sub_cella[11]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[11] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[11] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[11] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[12] (
// Equation(s):
// \inst|auto_generated|result [12] = SUM(( \a[12]~input_o  ) + ( !\add~input_o  $ (\b[12]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[11]~COUT  ))
// \inst|auto_generated|add_sub_cella[12]~COUT  = CARRY(( \a[12]~input_o  ) + ( !\add~input_o  $ (\b[12]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[11]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[12]~input_o ),
	.datae(gnd),
	.dataf(!\b[12]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[11]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [12]),
	.cout(\inst|auto_generated|add_sub_cella[12]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[12] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[12] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[12] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[13] (
// Equation(s):
// \inst|auto_generated|result [13] = SUM(( \a[13]~input_o  ) + ( !\add~input_o  $ (\b[13]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[12]~COUT  ))
// \inst|auto_generated|add_sub_cella[13]~COUT  = CARRY(( \a[13]~input_o  ) + ( !\add~input_o  $ (\b[13]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[12]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[13]~input_o ),
	.datae(gnd),
	.dataf(!\b[13]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[12]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [13]),
	.cout(\inst|auto_generated|add_sub_cella[13]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[13] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[13] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[13] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[14] (
// Equation(s):
// \inst|auto_generated|result [14] = SUM(( \a[14]~input_o  ) + ( !\add~input_o  $ (\b[14]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[13]~COUT  ))
// \inst|auto_generated|add_sub_cella[14]~COUT  = CARRY(( \a[14]~input_o  ) + ( !\add~input_o  $ (\b[14]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[13]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[14]~input_o ),
	.datae(gnd),
	.dataf(!\b[14]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[13]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [14]),
	.cout(\inst|auto_generated|add_sub_cella[14]~COUT ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[14] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[14] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[14] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|add_sub_cella[15] (
// Equation(s):
// \inst|auto_generated|result [15] = SUM(( \a[15]~input_o  ) + ( !\add~input_o  $ (\b[15]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[14]~COUT  ))
// \inst|auto_generated|cout  = CARRY(( \a[15]~input_o  ) + ( !\add~input_o  $ (\b[15]~input_o ) ) + ( \inst|auto_generated|add_sub_cella[14]~COUT  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\add~input_o ),
	.datad(!\a[15]~input_o ),
	.datae(gnd),
	.dataf(!\b[15]~input_o ),
	.datag(gnd),
	.cin(\inst|auto_generated|add_sub_cella[14]~COUT ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|result [15]),
	.cout(\inst|auto_generated|cout ),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|add_sub_cella[15] .extended_lut = "off";
defparam \inst|auto_generated|add_sub_cella[15] .lut_mask = 64'h00000FF0000000FF;
defparam \inst|auto_generated|add_sub_cella[15] .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|cout~1 (
// Equation(s):
// \inst|auto_generated|cout~1_sumout  = SUM(( GND ) + ( GND ) + ( \inst|auto_generated|cout  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\inst|auto_generated|cout ),
	.sharein(gnd),
	.combout(),
	.sumout(\inst|auto_generated|cout~1_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|cout~1 .extended_lut = "off";
defparam \inst|auto_generated|cout~1 .lut_mask = 64'h0000FFFF00000000;
defparam \inst|auto_generated|cout~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|auto_generated|overflow_wire[0] (
// Equation(s):
// \inst|auto_generated|overflow_wire [0] = (!\a[15]~input_o  & (\inst|auto_generated|result [15] & (!\add~input_o  $ (!\b[15]~input_o )))) # (\a[15]~input_o  & (!\inst|auto_generated|result [15] & (!\add~input_o  $ (\b[15]~input_o ))))

	.dataa(!\add~input_o ),
	.datab(!\a[15]~input_o ),
	.datac(!\b[15]~input_o ),
	.datad(!\inst|auto_generated|result [15]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|auto_generated|overflow_wire [0]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|auto_generated|overflow_wire[0] .extended_lut = "off";
defparam \inst|auto_generated|overflow_wire[0] .lut_mask = 64'h2148214821482148;
defparam \inst|auto_generated|overflow_wire[0] .shared_arith = "off";
// synopsys translate_on

assign cout = \cout~output_o ;

assign over = \over~output_o ;

assign s[15] = \s[15]~output_o ;

assign s[14] = \s[14]~output_o ;

assign s[13] = \s[13]~output_o ;

assign s[12] = \s[12]~output_o ;

assign s[11] = \s[11]~output_o ;

assign s[10] = \s[10]~output_o ;

assign s[9] = \s[9]~output_o ;

assign s[8] = \s[8]~output_o ;

assign s[7] = \s[7]~output_o ;

assign s[6] = \s[6]~output_o ;

assign s[5] = \s[5]~output_o ;

assign s[4] = \s[4]~output_o ;

assign s[3] = \s[3]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[0] = \s[0]~output_o ;

endmodule
