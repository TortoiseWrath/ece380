// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Web Edition"

// DATE "11/15/2016 18:05:58"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lab10a (
	clk,
	clr,
	updown,
	count);
input 	clk;
input 	clr;
input 	updown;
output 	[2:0] count;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \count[0]~output_o ;
wire \count[1]~output_o ;
wire \count[2]~output_o ;
wire \clk~input_o ;
wire \clr~input_o ;
wire \cur~0_combout ;
wire \updown~input_o ;
wire \cur~1_combout ;
wire \cur~2_combout ;
wire [2:0] cur;


cyclonev_io_obuf \count[0]~output (
	.i(cur[0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
defparam \count[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \count[1]~output (
	.i(cur[1]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
defparam \count[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \count[2]~output (
	.i(cur[2]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[2]~output .bus_hold = "false";
defparam \count[2]~output .open_drain_output = "false";
defparam \count[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \clr~input (
	.i(clr),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clr~input_o ));
// synopsys translate_off
defparam \clr~input .bus_hold = "false";
defparam \clr~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \cur~0 (
// Equation(s):
// \cur~0_combout  = (!cur[0] & !\clr~input_o )

	.dataa(!cur[0]),
	.datab(!\clr~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\cur~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \cur~0 .extended_lut = "off";
defparam \cur~0 .lut_mask = 64'h8888888888888888;
defparam \cur~0 .shared_arith = "off";
// synopsys translate_on

dffeas \cur[0] (
	.clk(\clk~input_o ),
	.d(\cur~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cur[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cur[0] .is_wysiwyg = "true";
defparam \cur[0] .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \updown~input (
	.i(updown),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\updown~input_o ));
// synopsys translate_off
defparam \updown~input .bus_hold = "false";
defparam \updown~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \cur~1 (
// Equation(s):
// \cur~1_combout  = (!\clr~input_o  & (!cur[0] $ (!cur[1] $ (!\updown~input_o ))))

	.dataa(!cur[0]),
	.datab(!cur[1]),
	.datac(!\clr~input_o ),
	.datad(!\updown~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\cur~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \cur~1 .extended_lut = "off";
defparam \cur~1 .lut_mask = 64'h9060906090609060;
defparam \cur~1 .shared_arith = "off";
// synopsys translate_on

dffeas \cur[1] (
	.clk(\clk~input_o ),
	.d(\cur~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cur[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cur[1] .is_wysiwyg = "true";
defparam \cur[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \cur~2 (
// Equation(s):
// \cur~2_combout  = ( \updown~input_o  & ( (!\clr~input_o  & (!cur[2] $ (((!cur[0]) # (!cur[1]))))) ) ) # ( !\updown~input_o  & ( (!\clr~input_o  & (!cur[2] $ (((cur[1]) # (cur[0]))))) ) )

	.dataa(!cur[0]),
	.datab(!cur[1]),
	.datac(!cur[2]),
	.datad(!\clr~input_o ),
	.datae(!\updown~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\cur~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \cur~2 .extended_lut = "off";
defparam \cur~2 .lut_mask = 64'h87001E0087001E00;
defparam \cur~2 .shared_arith = "off";
// synopsys translate_on

dffeas \cur[2] (
	.clk(\clk~input_o ),
	.d(\cur~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cur[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cur[2] .is_wysiwyg = "true";
defparam \cur[2] .power_up = "low";
// synopsys translate_on

assign count[0] = \count[0]~output_o ;

assign count[1] = \count[1]~output_o ;

assign count[2] = \count[2]~output_o ;

endmodule
